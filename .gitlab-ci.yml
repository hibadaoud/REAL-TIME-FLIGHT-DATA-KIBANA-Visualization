  workflow:
      name: Real Time Fligh Dashboard Pipeline
      rules:
          - if: $CI_COMMIT_BRANCH == 'main' || $CI_COMMIT_BRANCH == "feature"
            when: always
          - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'feature' && $CI_PIPELINE_SOURCE == 'merge_request_event'
            when: always

  stages:
    - test
    # - containerization
    # - dev-deploy
    # - stage-deploy
    # - prod-deploy
    # - post-deploy

  include:
    - template: Jobs/SAST.gitlab-ci.yml
    - component: gitlab.com/gitlab-components/secret-detection/secret-detection@1.0
    # - template: Security/Container-Scanning.gitlab-ci.yml

  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_VERSION: $CI_PIPELINE_ID
    GITLAB_ADVANCED_SAST_ENABLED: 'true'

  # Define a reusable job template for preparing Node.js environment with MongoDB.
  .prepare_nodejs_environment:
    image: node:18.17.1-alpine3.17
    services:
      - name: mongo:latest
        alias: mongo
        pull_policy: always
    variables:
      MONGO_BASE_URI: 'mongodb://mongo:27017'
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      DB_Test_NAME: Dashboard-Auth

    cache:
      policy: pull-push
      when: on_success
      paths: 
        - backend/node_modules/
      key:
        files:
          - backend/package-lock.json
        prefix: node_modules
    before_script:
      - cd backend
      - npm install


  sast:
    stage: .pre

  secret_detection:
    stage: .pre
    variables:
      SECRET_DETECTION_HISTORIC_SCAN: "false"
    rules:
      - if: $CI_COMMIT_BRANCH == "feature"
        when: always
      - if: $CI_COMMIT_BRANCH == "main"
        when: never

  
 #Job to install dependencies and run tests
  test_backend:
    extends: .prepare_nodejs_environment
    stage: test
    script:
      - npm run test             # Run tests if MongoDB connection is successful
    artifacts:
      paths:
        - backend/test-reports/jest-junit.xml
      when: always
      expire_in: 3 days
      reports:
        junit: backend/test-reports/jest-junit.xml

  